ðŸ§© Problem Solved: Leetcode 26. Remove Duplicates from Sorted Array
ðŸ”— Problem Link: https://lnkd.in/dPD32s8K


class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        // Get the size of the input array
        int n = nums.size();

        // Initialize two pointers: i and j
        int i = 0;

        // Iterate through the array starting from the second element (j = 1)
        for (int j = 1; j < n; j++) {
            // Check if the current element (nums[j]) is different from the previous element (nums[i])
            if (nums[i] != nums[j]) {
                // If different, update the value at nums[i+1] to be nums[j]
                nums[i + 1] = nums[j];
                // Move the i pointer one step forward
                i++;
            }
        }

        // Return the length of the modified array (i + 1)
        return i + 1;
    }
};


Time Complexity Analysis:

The code iterates through the input array exactly once using two pointers (i and j).
Since it goes through the array once with a single loop, the time complexity is O(n), where 'n' is the number of elements in the input vector.

