ðŸš€ Day 20 of #100DaysOfCode Challenge ðŸš€

ðŸ§© Problem Solved: Selection Sort
ðŸ”— Problem Link: https://lnkd.in/d4yhAAKD

#include <vector>
using namespace std;

void selectionSort(vector<int>& arr) {
    // Get the size of the array
    int n = arr.size();

    // Outer loop: iterate through each element up to the second-to-last
    for (int i = 0; i < n - 1; i++) {
        // Assume the current index is the minimum
        int minIndex = i;

        // Inner loop: iterate through the unsorted part of the array
        for (int j = i + 1; j < n; j++) {
            // Check if the element at the current index is smaller than the element at the assumed minimum index
            if (arr[j] < arr[minIndex]) {
                // If true, update the minimum index
                minIndex = j;
            }
        }

        // Swap the element at the current index with the element at the minimum index
        int temp = arr[minIndex];
        arr[minIndex] = arr[i];
        arr[i] = temp;
    }
}

Time Complexity: O(n^2)
The algorithm has a nested loop structure. In the worst case, for each element in the array, it iterates through the remaining unsorted elements, resulting in a quadratic time complexity.
