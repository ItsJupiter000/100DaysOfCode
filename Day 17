ðŸš€ Day 17 of #100DaysOfCode Challenge ðŸš€

ðŸ§© Problem Solved: Leetcode 283. Move Zeroes
ðŸ”— Problem Link: https://lnkd.in/d_MwsHvH

#include <vector>

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        // Get the size of the input vector
        int n = nums.size();

        // Initialize a variable to keep track of the index where non-zero elements will be placed
        int nonZeroIndex = 0;

        // Iterate through the elements of the vector
        for (int i = 0; i < n; i++) {

            // If the current element is non-zero
            if (nums[i] != 0) {
                // Move the non-zero element to the nonZeroIndex
                nums[nonZeroIndex] = nums[i];

                // If the current index is different from nonZeroIndex, set the current index to 0
                if (i != nonZeroIndex) {
                    nums[i] = 0;
                }

                // Increment the nonZeroIndex to the next position
                nonZeroIndex++;
            }
        }
    }
};

The time complexity of this algorithm is O(n), where n is the size of the input vector. The algorithm makes a single pass through the vector, and each operation inside the loop takes constant time.
